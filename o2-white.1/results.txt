Sherd White
CS4760
Program Assignment 1
Results

Exercise 3.8:
1. Run 3.1 and observe the results for a number of different processes.  

	3:
	i:1 process ID:8289 parent ID:10682 child ID:8290
	i:3 process ID:8291 parent ID:8290 child ID:0
	i:2 process ID:8290 parent ID:1 child ID:8291

	6:
	i:1 process ID:3929 parent ID:10682 child ID:3930
	i:2 process ID:3930 parent ID:3929 child ID:3931
	i:3 process ID:3931 parent ID:3930 child ID:3932
	i:4 process ID:3932 parent ID:3931 child ID:3933
	i:5 process ID:3933 parent ID:3932 child ID:3934
	i:6 process ID:3934 parent ID:3933 child ID:0

	9:
	i:1 process ID:3929 parent ID:10682 child ID:3930
	i:2 process ID:3930 parent ID:3929 child ID:3931
	i:3 process ID:3931 parent ID:3930 child ID:3932
	i:4 process ID:3932 parent ID:3931 child ID:3933
	i:5 process ID:3933 parent ID:3932 child ID:3934
	i:6 process ID:3934 parent ID:3933 child ID:0

	15:
	i:1 process ID:3978 parent ID:10682 child ID:3979
	i:2 process ID:3979 parent ID:3978 child ID:3980
	i:3 process ID:3980 parent ID:3979 child ID:3981
	i:4 process ID:3981 parent ID:3980 child ID:3982
	i:5 process ID:3982 parent ID:3981 child ID:3983
	i:6 process ID:3983 parent ID:3982 child ID:3984
	i:7 process ID:3984 parent ID:1 child ID:3985
	i:8 process ID:3985 parent ID:3984 child ID:3986
	i:9 process ID:3986 parent ID:3985 child ID:3987
	i:10 process ID:3987 parent ID:3986 child ID:3988
	i:11 process ID:3988 parent ID:3987 child ID:3989
	i:12 process ID:3989 parent ID:3988 child ID:3990
	i:13 process ID:3990 parent ID:1 child ID:3991
	i:14 process ID:3991 parent ID:3990 child ID:3992
	i:15 process ID:3992 parent ID:3991 child ID:0

	20: 
	i:1 process ID:4064 parent ID:10682 child ID:4065
	i:2 process ID:4065 parent ID:4064 child ID:4066
	i:3 process ID:4066 parent ID:4065 child ID:4067
	i:4 process ID:4067 parent ID:4066 child ID:4068
	i:5 process ID:4068 parent ID:4067 child ID:4069
	i:6 process ID:4069 parent ID:1 child ID:4070
	i:7 process ID:4070 parent ID:4069 child ID:4071
	i:8 process ID:4071 parent ID:4070 child ID:4072
	i:9 process ID:4072 parent ID:4071 child ID:4073
	i:10 process ID:4073 parent ID:4072 child ID:4074
	i:11 process ID:4074 parent ID:1 child ID:4075
	i:12 process ID:4075 parent ID:4074 child ID:4076
	i:13 process ID:4076 parent ID:4075 child ID:4077
	i:14 process ID:4077 parent ID:4076 child ID:4078
	i:15 process ID:4078 parent ID:4077 child ID:4079
	i:16 process ID:4079 parent ID:4078 child ID:4080
	i:17 process ID:4080 parent ID:4079 child ID:4081
	i:18 process ID:4081 parent ID:4080 child ID:4082
	i:19 process ID:4082 parent ID:4081 child ID:4083
	i:20 process ID:4083 parent ID:4082 child ID:0
	
2. Fill in the actual Process IDs of the processes in the diagram of Figure 3.2 for a run with command line argument value of 4.
	
	4:
	i:1 process ID:16255 parent ID:10682 child ID:16256
	i:2 process ID:16256 parent ID:16255 child ID:16257
	i:4 process ID:16258 parent ID:16257 child ID:0
	i:3 process ID:16257 parent ID:16256 child ID:16258
	
	1 -> 2 -> 3 -> 4	=	16255 -> 16256 -> 16258 -> 16257
	
3. Experimenting to find the largest number of processes I could generate with the program seemed to vary between 350 and 364.

4. By placing a sleep directly before the final fprintf statement I could generate no more than 27 processes. 

5. After changes, last value only causes longer wait and doesn't change the number of processes:
	4 4 4:
	i:1 process ID:10154 parent ID:10682 child ID:10155
	i:1 process ID:10155 parent ID:10154 child ID:10156
	i:1 process ID:10157 parent ID:10156 child ID:0
	i:1 process ID:10156 parent ID:10155 child ID:10157
	i:2 process ID:10154 parent ID:10682 child ID:10155
	i:2 process ID:10155 parent ID:10154 child ID:10156
	i:2 process ID:10156 parent ID:10155 child ID:10157
	i:2 process ID:10157 parent ID:10156 child ID:0
	i:3 process ID:10154 parent ID:10682 child ID:10155
	i:3 process ID:10155 parent ID:10154 child ID:10156
	i:3 process ID:10157 parent ID:10156 child ID:0
	i:3 process ID:10156 parent ID:10155 child ID:10157
	
	1 4 2:
	i:1 process ID:10217 parent ID:10682 child ID:0
	i:2 process ID:10217 parent ID:10682 child ID:0
	i:3 process ID:10217 parent ID:10682 child ID:0

6. Reverted program back to 3.1, adding wait (for child) before final fprintf causes the pid processes to exit in reverse of before.
	This also appears to force a limit of 27 processes at a time on the system.
	
	5:
	i:5 process ID:1933 parent ID:1932 child ID:-1
	i:4 process ID:1932 parent ID:1931 child ID:1933
	i:3 process ID:1931 parent ID:1930 child ID:1932
	i:2 process ID:1930 parent ID:1929 child ID:1931
	i:1 process ID:1929 parent ID:10682 child ID:1930

7. 	